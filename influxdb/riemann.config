; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init :file "/var/log/riemann/riemann.log")

(require '[riemann.influxdb :as i])

(def influxdb-client (i/influxdb {
             :version :0.9
	     :db "foobazz"
	     :tag-fields #{:host :category}}))
 
; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server :host host)
  (udp-server :host host)
  (ws-server  :host host))

; REPL
; (let [host "127.0.0.1"]
;  (repl-server :host host))

; Expire old events from the index every 5 seconds.
(periodically-expire 60)


(load-plugins)

(let [index (index)]

  ; Inbound events will be passed to these streams:
  (streams

    ;;index
    ;;influxdb-client

    (where (service "index")
      (fixed-time-window 10
        (smap folds/count influxdb-client)))
    
    (where (or (service "cpu") (service "memory") (service "load"))
      influxdb-client)

    ; Log expired events.
    (expired
      (fn [event] (info "expired" event)))
))
